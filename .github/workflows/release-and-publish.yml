name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Get current version
        id: current_version
        run: echo "version=$(cat runpod_ssh/VERSION)" >> $GITHUB_OUTPUT

      - name: Get latest release version
        id: latest_version
        run: |
          latest=$(gh release list -L 1 | cut -f1)
          latest=${latest#v}  # Remove 'v' prefix if present
          if [ -z "$latest" ]; then
            latest="0.0.0"
          fi
          echo "version=$latest" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compare versions
        id: compare
        run: |
          current="${{ steps.current_version.outputs.version }}"
          latest="${{ steps.latest_version.outputs.version }}"
          if [ "$current" != "$latest" ]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
            echo "Creating new release: v$current (current) != v$latest (latest)"
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
            echo "No new version: v$current (current) = v$latest (latest)"
          fi

      - name: Create Release
        if: steps.compare.outputs.new_version == 'true'
        run: |
          gh release create "v${{ steps.current_version.outputs.version }}" \
            --title "v${{ steps.current_version.outputs.version }}" \
            --generate-notes \
            --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # PyPI publishing steps
      - name: Set up Python
        if: steps.compare.outputs.new_version == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install poetry
        if: steps.compare.outputs.new_version == 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure poetry
        if: steps.compare.outputs.new_version == 'true'
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

      - name: Install dependencies
        if: steps.compare.outputs.new_version == 'true'
        run: poetry install

      - name: Build and publish
        if: steps.compare.outputs.new_version == 'true'
        run: |
          poetry build
          poetry publish --no-interaction

      - name: Verify publish
        if: steps.compare.outputs.new_version == 'true'
        run: |
          echo "âœ¨ Version v${{ steps.current_version.outputs.version }} released and published!" 